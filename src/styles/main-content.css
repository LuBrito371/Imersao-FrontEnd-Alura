/* HEADER */
.main-container {
  max-width: 80vw;
  height: 100vh;
  margin-left: 320px;
  margin-right: 56px;
}

.header__navigation {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px;
  margin: 10px;
  border-radius: 8px;
  background-color: #121212;
}

.navigation {
  display: flex;
  justify-content: space-around;
  align-items: center; 
  
}

.header__navigation .navigation .arrow-left{
  margin-right: 1.25rem;
}

.arrow-right, .arrow-left{
  display: flex;
  align-items: center;
  justify-content: center;
  width: 32px;
  height: 32px;
  background: var(--bg-icon);
  background-color: var(--bg-arrow-color);
  border-radius: 50%;
  border: none;
  cursor: pointer;
  
}

.header__login{
  display: flex;
  align-items: center;
  /* margin-left: 350px; */
}

.header__search{
  display: flex;
  align-items: center;
  width: 364px;
  height: 48px;
  margin-left: 8px;
  background-color: #242424;
  border-radius: 500px;
  border: 1px solid transparent;
}

.header__search img{
  width: 16px;
  height: 16px;
  margin-left: 10px;
}

.header__search input{
  background: transparent;
  border: none;
  padding: 0 100px 0 12px;
  color: #fff;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  outline: none;
}


.header__navigation .header__login .subscribe{
  color: var( --text-sub);
  font-size: 16px;
  font-weight: 600;
  background-color: transparent;
  margin-right: 32px;
  border-radius: 40px;
  border: none;
}

.header__navigation .header__login .login{
  width: 100px;
  height: 48px;
  color: var(--text-base-dark);
  font-size: 16px;
  font-weight: 700;
  border-radius: 40px;
}

/* DISPLAY * TOTAL e vamos passar rapidamente por cada um deles
block: Um elemento com display: block sempre inicia em uma nova linha e ocupa toda a largura disponível.
Ele empilha verticalmente um sobre o outro.

inline: Um elemento com display: inline não inicia em uma nova linha e apenas ocupa o espaço necessário para o conteúdo.
Elementos inline não aceitam largura (width) e altura (height).

inline-block: Um elemento com display: inline-block combina características de elementos inline e block.
Ele não inicia uma nova linha e permite a definição de largura e altura.

flex: A propriedade display: flex é usada para criar um contêiner flexível.
Os itens dentro do contêiner flexível podem ser ajustados em termos de tamanho, ordem e alinhamento.

grid: A propriedade display: grid é usada para criar um contêiner de layout em grade.
Permite definir um layout bidimensional com linhas e colunas, facilitando o posicionamento de elementos.

inline-flex:Similar ao flex, mas o contêiner flexível é tratado como um elemento inline.

table, table-row, table-cell: Esses valores de display são usados para criar layouts semelhantes a tabelas.

none: Um elemento com display: none é completamente removido do fluxo de layout e não é renderizado na tela.
*/
